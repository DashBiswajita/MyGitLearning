1) What is Git?
   - Its A Version Control System.(VCS)
   - A Software designed to track the chnages made to a single file or multiple files over time.
   - It gives the ability to revert back to the previous file or project version.
   - It gives the ability to compare the changes made to files from one version to another version.
   - It version controls any plain text, not just source codes.
   
2) What are the 3 stages of a file in git?
   -commited 
   -modified
   -staged
   * These 3 stages of a files are applied to only those files which have been tracked by git.
3) What does commited means ?
   - It means the data inside the file is safely stored inside the local database of that project.

4) What does modified means ?
   - It means the file content has changed from its last commited state in the local database. But these changes has not been commited yet.

5) What does staged means ?
   - It means the modified files are now marked for commit and can be commited.
   
6) What does untracked files mean ?
   - Those files which have been added to the project since the last commit snapshot that git has not been tracking.

7) What are the three main parts of a git project ?
   - Working Directory
   - Staging Area
   - .git Directory

8) What is .git Directory or git repository ?
   - Origin of project data
   - Also contains the data which is pulled down from the remote server
   - This is the directory where git keeps all of its metadata for the repository.
   - The content of the .git directory are private to git.
   - Files in this state are commited and recored to the project as a version snapshot.
   
9) What is working directory ?
   - This is a single copy or a checkout version of the project from origin.
   
10) What is the staging area ?
   - Also known as index.
   - Sets between the working directory and the .git directory.
   - One can take the snapshot of the working directory and make changes to certain files and make them ready for next commit. Until the next commit or stash, 
     these modified files will be in the staging area.
   - When You commit these modified files and push them to the git repository, then they will come under the .git directory.
   
11) List some of the git command line commands ?
   - git --version (command to know the version of git or to know if the git is installed or not).
   - git config --global user.name "Biswajita" (To set the user name)
   - git config --global user.email "biswajita.dash@gmail.com" (To set the user email)
   - git config --list (To check configuration settings)
   - git help (If you want to know anything about git commands)
   - git init (To initialize git repository)
   - git add . (To add all the files to the staging area, so that we can track the files)
   - git add <file_name> (To add a particular file to the staging area)
   - git commit -m "message you want to give for your commit" (To commit your changes)
   - git remote add origin "url of the origin repository" (To add the origin github repository to our local repository)
   - git push -u origin master (To push the the local repository which is pointing to the origin repository)
   - git status (To know the status of the local repository)
   - git status -s (or) git status --short (To know the git status in short) (In short status, M - modified ; A - newly added file ; ?? - untracked file)
   - git diff (it will show the difference between the modified files or the files that are staged to be commited with the last commited snapshot) (This command output contains data like compared files,
     file metadata, chunk headers, chunk changes, change maker for files)
   - git diff --staged (This command will compare and show the difference between the staged files with the last commited snapshot) 
   - git diff --staged --no-renames (When git finds finds two files with same conntent at that time, at that time even though the files names are different it will show similarity index as 100% and tells that
     a copy of file b has been created from a. To avoid this scenario and tell that we have not copied the same file, we use this command.)
   - git commit -a -m "message" (To commit all the changes along with staging them to the staging area)
   - git log (To know the commit history, most recent commit will show first. This will show author name, email and date on which the changes were commited)
   - git log -<number to which you want to limit the git log> (git log -3 -> It will limit the log to 3 commits)
   - git log --oneline (To show all the commits in one line format)
   - git log --stat (To get the commit history in detailed format)
   - git log --patch (Detailed commit history along with the differences in file versions)
   - git rm <file_name> (To remove a file from the project and not to get tracked by git anymore)
   - git rm --cached <file_name> (To untrack a file but not to remove the file from the project)
   - git mv <old_fileName> <new_fileName> (To rename the file name)
   - git checkout -b <branch_name> (To checkout to a new branch)
   - git checkout <branch_name> (To checkout to an existing branch)
   - git stash (To stash the modified files if you dont want to commit the changes at that time , used when your changes are in WIP)
   - git stash list (This shows the list the WIP changes that we stashed with some commit data)
   - git stash show (This shows a detailed view of what we stashed)


   